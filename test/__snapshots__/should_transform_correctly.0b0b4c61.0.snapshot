should transform correctly â€º It should codemod style calls inside JSX
[@react.component]
let make = (~navigation: Nautilus.StackNavigator.commonNavigation('a, 'b)) => {
  module AppConfig = (val AppConfigTypes.useAppConfig());
  let sloganTopStyle = Styles.sloganTop();
  let sloganBottomStyle = Styles.sloganBottom();

  let ({state: onboardingState}, getOnboardingState) =
    AsyncHook.use((~cb, ()) =>
      cb(() => {PersistedKV.OnboardingState.getToken()})
    );

  React.useEffect0(() => {
    getOnboardingState()
    ->Promise.tapOk(data => {
        switch (data) {
        | Some(_) =>
          navigation.push(
            NavigationConfig.ConfigOuterApp.SignUp({skipPreregister: true}),
          )
        | None => ()
        }
      })
    |> ignore;
    None;
  });

  <StackNavigator.Screen navigation>
    {() =>
       <ReactNative.ImageBackground
         style=ReactNative.Style.(style(~flex=1., ()))
         source={AppConfig.images.startupBackground}>
         <AppStatusBar mode=AppStatusBar.Dark />
         <SafeAreaView style=Styles.wrapper>
           <View style=Styles.sloganTopWrapper>
             {switch (AppConfig.sayings.startupSloganTop) {
              | Some(sloganTop) =>
                <>
                  <Logo
                    style=Style.(
                      style(
                        ~marginLeft=pt((15.)),
                        ~width=pct((30.)),
                        ~maxHeight=pt((200.)),
                        (),
                      )
                    )
                    mode=Logo.White
                  />
                  <Title style=sloganTopStyle value=sloganTop />
                </>
              | None =>
                <Image
                  style=Style.(
                    style(
                      ~maxHeight=pt((80.)),
                      ~maxWidth=pct((90.)),
                      ~marginTop=pt((30.)),
                      ~marginLeft=auto,
                      ~marginRight=auto,
                      (),
                    )
                  )
                  resizeMode=`contain
                  source={AppConfig.images.logoStartupTop}
                />
              }}
           </View>
           <View style=Styles.actionsWrapper>
             <View
               style=Style.(
                 style(
                   ~width=pct((100.)),
                   ~maxHeight=pt((400.)),
                   ~alignItems=`center,
                   ~justifyContent=`flexStart,
                   // Workaround for the messed up images to ease the floating awkwardness
                   ~marginBottom=pt(((-10.))),
                   (),
                 )
               )>
               <Image
                 source={AppConfig.images.startupLogo}
                 style=Styles.logoStyle
                 resizeMode=`cover
               />
             </View>
             <AppButton
               style={Style.array([|
                 Styles.actionButton,
                 Style.(
                   style(
                     ~backgroundColor=(
                       AppConfig.theme.startupButtonBackgroundColor,
                     ),
                     (),
                   )
                 ),
               |])}
               mode=`highlight
               onPress={_ => navigation.push(SignIn)}
               text=\"Entrar\"
             />
             <AppButton
               style=Styles.actionButton
               onPress={_ => {
                 switch (onboardingState) {
                 | Data(Some(_data)) =>
                   navigation.push(SignUp({skipPreregister: true}))
                 | _ => navigation.push(SignUp({skipPreregister: false}))
                 }
               }}
               loading={onboardingState->AsyncHook.isLoading}
               disabled={onboardingState->AsyncHook.isLoading}
               text={
                 switch (onboardingState) {
                 | Data(Some(_data)) => \"Continuar abertura de conta\"
                 | _ => {j|Abrir conta|j}
                 }
               }
               mode=`light
             />
           </View>
           <Egg setps=\"TTTT\" onCatch={easterEgg(~env=AppConfig.env)}>
             <Title
               style=sloganBottomStyle
               value={AppConfig.sayings.startupSloganBottom}
             />
           </Egg>
         </SafeAreaView>
       </ReactNative.ImageBackground>}
  </StackNavigator.Screen>;
};
